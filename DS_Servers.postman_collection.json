{
	"info": {
		"_postman_id": "f74980aa-3486-45df-aa54-3f219d7e3abb",
		"name": "DS Servers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User (Auth)",
			"item": [
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"admin_token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.clear();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user-admin}}\",\n    \"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-auth}}/auth/login",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user with invalid payload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"user_id\", jsonData._id);",
									"pm.globals.set(\"user_username\", jsonData.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{ds-servers-auth}}/user",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"user_id\", jsonData._id);",
									"pm.globals.set(\"user_username\", jsonData.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user-adauto}}\",\n    \"password\": \"adauto\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-auth}}/user",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"admin_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/auth/logout",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Adauto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"adauto_token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user-adauto}}\",\n    \"password\": \"adauto\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-auth}}/auth/login",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user password with invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"adauto123456\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-auth}}/user/invalid",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user password with invalid payload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{ds-servers-auth}}/user/{{user-adauto}}",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								"{{user-adauto}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"adauto123456\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-auth}}/user/{{user-adauto}}",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								"{{user-adauto}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by invalid id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/user/?id=invalid",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by invalid username",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/user/?username=invalid",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								""
							],
							"query": [
								{
									"key": "username",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/user/",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/user/?id={{user_id}}",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by username",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/user/?username={{user_username}}",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								""
							],
							"query": [
								{
									"key": "username",
									"value": "{{user_username}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout as Adauto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"adauto_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/auth/logout",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"admin_token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user-admin}}\",\n    \"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-auth}}/auth/login",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user with invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/user/invalid",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"user_id\");\r",
									"pm.globals.unset(\"user_username\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/user/{{user_id}}",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"admin_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/auth/logout",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Movie (Core)",
			"item": [
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"admin_token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.clear();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-auth}}/auth/login",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create movie with invalid payload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"movie_id\", jsonData._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"year\": \"-2\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-core}}/movie",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"movie_id\", jsonData._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\",\n    \"duration\": \"240\",\n    \"year\": \"2019\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-core}}/movie",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find movie by invalid id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-core}}/movie/?id=invalid",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-core}}/movie",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find movie by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-core}}/movie/?id={{movie_id}}",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{movie_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update movie with invalid id",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\",\n    \"duration\": \"1234\",\n    \"year\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-core}}/movie/invalid",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update movie with invalid payload",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"year\": \"-2\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-core}}/movie/{{movie_id}}",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update movie",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\",\n    \"duration\": \"1234\",\n    \"year\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-core}}/movie/{{movie_id}}",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie with invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-core}}/movie/invalid",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"movie_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-core}}/movie/{{movie_id}}",
							"host": [
								"{{ds-servers-core}}"
							],
							"path": [
								"movie",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"admin_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{ds-servers-auth}}/auth/logout",
							"host": [
								"{{ds-servers-auth}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API",
			"item": [
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"admin_token\", jsonData.token);",
									"",
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.clear();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/auth/login",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user with invalid Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid token.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([401]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "invalid"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"adauto\",\n    \"password\": \"adauto\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/user",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user with no Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Token not provided.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([403]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"adauto\",\n    \"password\": \"adauto\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/user",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user with invalid payload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid payload for create user.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"adauto\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/user",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"user_id\", jsonData._id);",
									"pm.globals.set(\"user_username\", jsonData.username);",
									"",
									"pm.test(\"User created or already exists.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"adauto\",\n    \"password\": \"adauto\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/user",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"admin_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/auth/logout",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Adauto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"adauto_token\", jsonData.token);",
									"",
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"adauto\",\n    \"password\": \"adauto\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/auth/login",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user password with invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User updated.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"adauto123456\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/user/invalid",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user password with invalid payload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User updated.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/user/{{user-adauto}}",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								"{{user-adauto}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User updated.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"adauto123456\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/user/{{user-adauto}}",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								"{{user-adauto}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User not found.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/user/?id=invalid",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User not found.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/user/?username=invalid",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								""
							],
							"query": [
								{
									"key": "username",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Users list ok.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/user/",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User find by ID ok.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/user/?id={{user_id}}",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User find by ID ok.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{adauto_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/user/?username={{user_username}}",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								""
							],
							"query": [
								{
									"key": "username",
									"value": "{{user_username}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create movie with invalid Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid token.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([401]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "invalid",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\",\n    \"duration\": 240,\n    \"year\": 2019\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/movie",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create movie with no Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Token not provided.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([403]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\",\n    \"duration\": 240,\n    \"year\": 2019\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/movie",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create movie with invalid payload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Movie created or already exists.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/movie",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"movie_id\", jsonData._id);",
									"",
									"pm.test(\"Movie created or already exists.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\",\n    \"duration\": \"240\",\n    \"year\": \"2019\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/movie",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find movie by invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Movie not found.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/movie/?id=invalid",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Movies list ok.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/movie",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find movie by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Movie find by ID ok.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/movie/?id={{movie_id}}",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{movie_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update movie with invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Movie updated.\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\",\n    \"duration\": \"1234\",\n    \"year\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/movie/invalid",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update movie with invalid payload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Movie updated.\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/movie/{{movie_id}}",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Movie updated.\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A volta dos que não foram\",\n    \"duration\": \"1234\",\n    \"year\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/movie/{{movie_id}}",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie with invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Movie not found.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/movie/invalid",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Movie delete ok.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									"pm.globals.unset(\"movie_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{adauto_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/movie/{{movie_id}}",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"movie",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout as Adauto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"adauto_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/auth/logout",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"admin_token\", jsonData.token);",
									"",
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"admin\",\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{ds-servers-api}}/auth/login",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "List users - Before",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Users list ok.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{admin_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/user/",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user with invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User not found.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/user/invalid",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User delete ok.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									"pm.globals.unset(\"user_id\");",
									"pm.globals.unset(\"user_username\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/user/{{user_id}}",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List users - After",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Users list ok.\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{admin_token}}"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/user/",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"admin_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{ds-servers-api}}/auth/logout",
							"host": [
								"{{ds-servers-api}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}